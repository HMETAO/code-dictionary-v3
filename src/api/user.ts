import request from '../utils/request'
import {LoginForm} from "../form/user";
import {Result} from "../result";
import {UserInfo} from "../type/userType";
import TUIKit from "../plugin/tuikit";
import {genTestUserSig} from "../TUIKit";

export function login(data: LoginForm): Promise<Result<UserInfo>> {
    return request({
        url: '/api/v1/user/login',
        method: 'post',
        data
    })
}

export function logout(): Promise<Result> {
    return request({
        url: '/api/v1/user/logout',
        method: 'get',
    })
}


export function registry(data: LoginForm): Promise<Result> {
    return request({
        url: '/api/v1/user/registry',
        method: 'post',
        data
    })
}

/**
 * 登录IM
 * @param userID userID
 */
export function loginIM(userID: string) {
    // login TUIKit
    return TUIKit.login({
        userID: userID,
        userSig: genTestUserSig({
            SDKAppID: parseInt(import.meta.env.VITE_IM_SDK_APP_ID),
            secretKey: import.meta.env.VITE_IM_SECRET_KEY,
            userID,
        }).userSig, // The password with which the user logs in to IM. It is the ciphertext generated by encrypting information such as userID.For the detailed generation method, see Generating UserSig
    });
}
